// ---------- Visual TOC Widget ----------
// ---------------------------------------

// ---------- Global Variable Declaration (JSLint - Do Not Delete) ----------

/* global libVal, CSVal, pubsubz, flipClick, tileInit */
/* exported tileInit, flipClick */

// ---------- Embedded Widget Variables ----------

var widget = parent.replaceStringsVisualTOC;
//var roleDefs = parent.roleDefinitionsVisualTOC;

// ---------- Global Variables ----------
var langFile = $("html", top.document).attr("lang");
var localPath = "lcs_widgets_dev";
var sharedWidgetPath = '/shared/custom_widgets/' + localPath + '/widgets/visual_toc/';

var configDataPath = widget.orgUnit.path + 'custom_widgets/' + localPath + '/widgets/visual_toc/config.txt';
var mainConfigPath = sharedWidgetPath + 'config/config.txt';
var imagePath = sharedWidgetPath + 'img/';
var langFilePath = sharedWidgetPath + 'lang/' + langFile + '.txt';
var defaultLangFilePath = sharedWidgetPath + 'lang/en-us.txt';

var langterms = {};
var modcallsdone = 0;
var modcallstotal = 0;
var completionCalculated = false;
var topicCompletionCalculated = false;


// ----------- Configuration Variables -----------

var showPercent, showPercentv2, coloredBar, flip, displayProgress, resizeId;
var radialProgress = false;
var completionProgress = true; //use completion route, not read/unread
var ignoreModuleString = "***"; //exlude all modules that have this in the title
var accenthex = "#006fbf";
var headerhex = "#071b39";
var defaultImage = "tile-img-default.png";
var barColors = {
   "0": "#E1E1E1",
   "25": "#C3C3C3",
   "50": "#A5A5A5",
   "75": "#878787"
};
var options = {
   size: 120,
   lineWidth: 10,
   rotate: 0
}

// ---------- Functions ----------

function isHexaColor(sNum) {
   //remove # if it exists
   sNum = sNum.replace('#', '');

   return (typeof sNum === "string") && sNum.length === 6 &&
      !isNaN(parseInt(sNum, 16));
}

function resizeFrame() {
   $("#cs-widget-course-progress iframe", window.parent.document).height($(".alltiles").height() + 35 + "px");
}

var drawCircle = function(tileid, color, percent100) {
   var radius = (options.size - options.lineWidth) / 2;
   var percent = percent100 / 100;
   var el = $("#" + tileid + " .progressarea"); // get canvas
   var canvas = document.createElement('canvas');
   var span = document.createElement('span');
   span.textContent = (percent * 100).toFixed() + '%';

   if (typeof(G_vmlCanvasManager) !== 'undefined') {
      var G_vmlCanvasManager = {};
      G_vmlCanvasManager.initElement(canvas);
   }

   var ctx = canvas.getContext('2d');
   canvas.width = canvas.height = options.size;

   el.append(span);
   el.append(canvas);

   ctx.translate(options.size / 2, options.size / 2); // change center
   ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg

   ctx.beginPath();
   ctx.arc(0, 0, radius, 0, Math.PI * 2 * 1, false);
   ctx.strokeStyle = '#e5e5e5';
   ctx.lineCap = 'butt'; // butt, round or square
   ctx.lineWidth = options.lineWidth;
   ctx.stroke();

   if (percent > 0) {
      if (percent === 1) {
         percent = Math.min(Math.max(0, percent || 1), 1);
         ctx.beginPath();
         ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
         ctx.strokeStyle = "#006f53";
         ctx.lineCap = 'butt'; // butt, round or square
         ctx.lineWidth = options.lineWidth;
         ctx.stroke();
      } else {
         percent = Math.min(Math.max(0, percent || 1), 1);
         ctx.beginPath();
         ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
         ctx.strokeStyle = accenthex;
         ctx.lineCap = 'butt'; // butt, round or square
         ctx.lineWidth = options.lineWidth;
         ctx.stroke();
      }
   }

};

function flipClick(num) {
   document.querySelector("#milestone" + num).classList.toggle("flip");
   var flipped = $("#milestone" + num).data("flipped");

   if (!flipped) {
      $("#milestone" + num + ' .flipper .back .tiledesc').fadeIn();
   }

   setTimeout(function() {
      flipped = $("#milestone" + num).data("flipped");

      if (flipped) {
         $("#milestone" + num).data("flipped", false);
         $("#milestone" + num + ' .flipper .tiledesc').css('display', 'none');
      } else {
         $("#milestone" + num).data("flipped", true);

      }

      $("#milestone" + num + '.flip canvas').css('display', 'none');
      $("#milestone" + num + '.flip-container:not(".flip") .front canvas').css('display', 'block');
   }, 100);
}

function tileInit() {

   if (modcallsdone === modcallstotal && completionCalculated && topicCompletionCalculated) {

      var imgError = function() {
         this.tileimage = imagePath + defaultImage;
         $('#img_' + this.i).css('background-image', 'url(' + this.tileimage.toString() + ')');
      }

      var imgOnLoad = function() {
         $('#img_' + this.i).css('background-image', 'url(' + this.tileimage + ')');
      }

      for (var i = 0; i < CSVal.toc.Modules.length; i++) {
         if (CSVal.toc.Modules[i].Title.indexOf(ignoreModuleString) === -1) {
            var firsttopic = CSVal.toc_firstTopic(CSVal.toc.Modules[i]);
            var firsttopictitle = "";
            var newtile = '';
            var descimg = {};

            newtile = newtile + '<div class="miletile flip-container" id="milestone' + i + '"><div class="flipper"><div class="front"><div class="headerarea">';

            try {
               descimg = $(CSVal.toc.Modules[i].Description.Html).find('img');
            } catch (err) {

            }
            var img = new Image();

            if ($(descimg).attr("src") === undefined) {
               tileimage = imagePath + defaultImage;
               img.src = tileimage;
               img.i = i;
               img.tileimage = tileimage;
            } else {
               var tileimage = $(descimg).attr("src");
               var formattedSrc = tileimage.replace(/ /g, "%20");
               img.src = formattedSrc;
               img.i = i;
               img.tileimage = formattedSrc;
            }

            newtile = newtile + '<a title="' + langterms.GotoModule + '" href="/d2l/le/content/' + widget.orgUnit.id + '/Home?itemIdentifier=D2L.LE.Content.ContentObject.ModuleCO-' + CSVal.toc.Modules[i].ModuleId + '" target="_top"><div class="header-img" id="img_' + i + '"></div></a>';

            img.onerror = imgError;
            img.onload = imgOnLoad;

            if (CSVal.toc.Modules[i].Topics[0] !== undefined) {
               firsttopictitle = CSVal.toc.Modules[i].Topics[0].Title;
               if (firsttopictitle.length > 25) {
                  firsttopictitle = firsttopictitle.substring(0, 20);
                  firsttopictitle += "...";
               }
            }

            if (firsttopic) {
               if (CSVal.toc.Modules[i].Title !== langterms.CourseInfo) {
                  var modtitle = CSVal.toc.Modules[i].Title;

                  if (modtitle.length > 35) {
                     modtitle = modtitle.substring(0, 35);
                     modtitle += "...";
                  }

                  var url = '/d2l/le/content/' + widget.orgUnit.id + '/Home?itemIdentifier=D2L.LE.Content.ContentObject.ModuleCO-' + firsttopic.ParentModuleId;
                  newtile = newtile + '<a  href="' + url + '" target="_top" title="' + langterms.Begin + ' ' + CSVal.toc.Modules[i].Title + '"><h3>' + modtitle + '</h3></a></div>';
               } else {
                  newtile = newtile + '<a  href="/d2l/le/content/' + widget.orgUnit.id + '/Home?itemIdentifier=D2L.LE.Content.ContentObject.ModuleCO-' + firsttopic.ParentModuleId + '" target="_top" title="' + langterms.StartHere + '"><h3>' + langterms.StartHere + '</h3></a></div>';
               }

            } else {
               newtile = newtile + '<h3>' + CSVal.toc.Modules[i].Title + '</h3></div>';
            }

            //progress - only show if we have content			
            if (CSVal.toc.Modules[i].Progress.Total && displayProgress === true) {
               var pp = Math.round(CSVal.toc.Modules[i].Progress.Percentage);

               newtile += '<div class="progress-container">';
               newtile += '<p class="subtopic">' + CSVal.toc.Modules[i].Progress.Read + ' ' + langterms.Of + ' ' + CSVal.toc.Modules[i].Progress.Total + ' ' + langterms.TopicsCompleted + '</p>';

               var bgCol = accenthex;

               //config {{ SHOW BAR COLORS }}
               if (coloredBar) {
                  var okbc = Object.keys(barColors);
                  for (var cbi = 0; cbi < okbc.length; ++cbi) {
                     if (pp >= okbc[cbi]) bgCol = barColors[okbc[cbi]];
                  }

               }
               var barCSS = '; background-color: ' + bgCol + '"';
               newtile += '<div class="progress"><div class="progress-bar" role="progressbar" aria-valuenow="' + pp + '" aria-valuemin="0" aria-valuemax="100" style="width: ' + pp + '%' + barCSS + '"><span class="sr-only">' + pp + '% ' + langterms.Complete + '</span>';

               //config {{ SHOW PROGRES PERCENT }}
               if (showPercent) {
                  newtile += '<span>' + pp + '%</span>';
               }

               //config {{ SHOW PROGRES PERCENT V2 }}
               if (showPercentv2) {
                  var pad = pp;
                  pad = pad > 95 ? 95 : pad;
                  pad = pad < 3 ? 3 : pad;
                  var extraCSS = ' style="margin-left: ' + pad + '%"';

                  newtile += '</div></div><div class="progress_legend"><span' + extraCSS + '><span style="margin-left: -1em">' + pp + '%</span></span></div>';
               } else {
                  newtile += '</div></div>';
               }

               newtile += '</div>';
            }

            newtile = newtile + '<div class="quicknav">';

            //add the flip if we have it enabled or we have stuff to show
            if (flip === true) {

               if (CSVal.toc.Modules[i].Description.Text.length <= 0) {
                  newtile = newtile + '<div class="overview disabled" id="overview_' + i + '" title="' + langterms.NoOverview + '">' + langterms.Overview + '</div>';
               } else {
                  newtile = newtile + '<a class="overview" id="overview_' + i + '" href="javascript:flipClick(' + i + ')" title="' + langterms.Overview + '">' + langterms.Overview + '</a>';
               }
            }

            var nextunread = {};

            if (completionProgress) {
               nextunread = CSVal.toc_nextIncomplete(CSVal.toc.Modules[i]);
            } else {
               nextunread = CSVal.toc_nextUnread(CSVal.toc.Modules[i]);
            }

            if (nextunread) {
               if (CSVal.toc.Modules[i].Progress.Read === 0) {
                  newtile = newtile + '<a class="continue blue" href="/d2l/le/content/' + widget.orgUnit.id + '/viewContent/' + nextunread.Identifier + '/View" target="_top" title="' + langterms.FirstTopic + ': ' + nextunread.Title + '">' + langterms.Continue + '</a>';
               } else {
                  newtile = newtile + '<a class="continue blue" href="/d2l/le/content/' + widget.orgUnit.id + '/viewContent/' + nextunread.Identifier + '/View" target="_top" title="' + langterms.NextTopic + ': ' + nextunread.Title + '">' + langterms.Continue + '</a>';
               }
            } else {
               if (firsttopic) {
                  newtile = newtile + '<div class="continue blue" href="" target="_top" title="' + langterms.ModuleComplete + '"><div class="checkmark"></div></div>';
               } else {

               }
            }

            newtile += "</div>"; //close quick nav

            newtile = newtile + '</div><div class="back">';

            if (CSVal.toc.Modules[i].Description.Text !== "") {

               var desctext = CSVal.toc.Modules[i].Description.Text;

               if (CSVal.toc.Modules[i].Description.Text.length > 325) {
                  desctext = desctext.substring(0, 325);
                  desctext += "...";
               }

               newtile = newtile + '<div class="tiledesc">' + desctext + '</div>';
            }

            newtile += '<div class="quicknav"><a class="overview" href="javascript:flipClick(' + i + ')" title="' + langterms.Return + '">' + langterms.Return + '</a></div>';
            newtile += '</div>';

            if (nextunread) {
               if (CSVal.toc.Modules[i].Progress.Read === 0) {
                  newtile = newtile + '<a class="continue blue" href="/d2l/le/content/' + widget.orgUnit.id + '/viewContent/' + nextunread.Identifier + '/View" target="_top" title="' + langterms.FirstTopic + ': ' + nextunread.Title + '"></a>';
               } else {
                  newtile = newtile + '<a class="continue blue" href="/d2l/le/content/' + widget.orgUnit.id + '/viewContent/' + nextunread.Identifier + '/View" target="_top" title="' + langterms.NextTopic + ': ' + nextunread.Title + '"></a>';
               }
            }

            newtile = newtile + '</div></div></div>';

            $(".alltiles").append(newtile);

            if (radialProgress) {
               drawCircle('milestone' + i, '#d2d8e2', CSVal.toc.Modules[i].Progress.Percentage);
               $("#milestone" + i + " .progressarea span").css("display", "block");
               $("#milestone" + i + " .progressarea span").addClass('whitetext');
            }
         }
      }

      $(".alltiles").append("<div style='clear:both'></div>");

      //style
      $('.headerarea h3').css("color", headerhex);

      resizeFrame();
   }
}

//load english if all else fails
function loadDefaultLang() {
   $.getJSON(defaultLangFilePath, function(data) {
      langterms = data;
   }).fail(function() {
      console.log("Unable to locate the default language file at " + defaultLangFilePath);
   });
}

pubsubz.subscribe('csval/init', function() {
   var mainCfg = $.getJSON(mainConfigPath, function(data) {
      var cfg = data.Configuration;
      showPercent = cfg.showPercent !== undefined ? cfg.showPercent : true;
      showPercentv2 = cfg.showPercentv2 !== undefined ? cfg.showPercentv2 : false;
      completionProgress = cfg.completionProgress !== undefined ? cfg.completionProgress : false;
      coloredBar = cfg.coloredBar !== undefined ? cfg.coloredBar : false;
      flip = cfg.flip !== undefined ? cfg.flip : true;
      displayProgress = cfg.displayProgress !== undefined ? cfg.displayProgress : true;
   }).fail(function() {
      console.log("Unable to locate main configuration file at " + mainConfigPath);
   });

   mainCfg.complete(function() {
      var courseCfg = $.getJSON(configDataPath, function(data) {
         var hd = data.Configuration;
         if (isHexaColor(hd.AccentHexCode)) accenthex = hd.AccentHexCode;
         if (isHexaColor(hd.HeaderHexCode)) headerhex = hd.HeaderHexCode;
         if (hd.TileImageDefaultSharedFiles !== "") defaultImage = hd.TileImageDefaultSharedFiles;
         if (hd.IgnoreModuleString !== "") ignoreModuleString = hd.IgnoreModuleString;
         if (hd.BarColors !== undefined) barColors = hd.BarColors;
      }).fail(function() {
         console.log("Unable to locate configuration file at " + configDataPath);
      });

      courseCfg.complete(function() {
         var langCfg = $.getJSON(langFilePath, function(data) {
            langterms = data;
         }).fail(function() {
            console.log("Unable to locate language file at " + langFilePath);
            loadDefaultLang();
         });

         langCfg.complete(function() {
            CSVal.get_toc();
         });
      });
   });

});

pubsubz.subscribe('csval/get_toc', function() {

   for (var i = 0; i < CSVal.toc.Modules.length; i++) {
      modcallstotal += 1;
      CSVal.get_module(CSVal.toc.Modules[i].ModuleId);
   }

   if (completionProgress) {
      CSVal.get_topic_progress();
      CSVal.get_module_progress();
   } else {
      topicCompletionCalculated = true;
      completionCalculated = true;
      tileInit();
   }

});


// ---------- Initiate ----------

$(document).ready(function() {
   $.ajaxSetup({
      cache: false
   });
});

$(window).resize(function() {
   clearTimeout(resizeId);
   resizeId = setTimeout(resizeFrame, 500);
});

CSVal.init();